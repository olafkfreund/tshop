# TShop Pre-commit Configuration
# This file defines git pre-commit hooks for code quality and consistency

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File formatting
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
      
      # Code quality
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-added-large-files
        args: [--maxkb=1000]
      
      # JSON/YAML validation
      - id: check-json
      - id: check-yaml
      - id: check-toml
      - id: pretty-format-json
        args: [--autofix, --indent=2]
      
      # Python support (for scripts)
      - id: check-ast
      - id: check-docstring-first
      - id: debug-statements
      
      # Security
      - id: detect-private-key

  # Prettier for code formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|json|css|scss|md|yaml|yml)$
        exclude: |
          (?x)^(
              package-lock\.json|
              \.next/.*|
              node_modules/.*|
              dist/.*|
              build/.*
          )$

  # ESLint for JavaScript/TypeScript
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: npx eslint --fix
        language: system
        files: \.(js|jsx|ts|tsx)$
        exclude: |
          (?x)^(
              \.next/.*|
              node_modules/.*|
              dist/.*|
              build/.*
          )$

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typescript-check
        name: TypeScript Type Check
        entry: npx tsc --noEmit
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false
        require_serial: true

  # Next.js lint
  - repo: local
    hooks:
      - id: nextjs-lint
        name: Next.js Lint
        entry: npx next lint --fix
        language: system
        files: \.(js|jsx|ts|tsx)$
        pass_filenames: false
        require_serial: true

  # Prisma formatting
  - repo: local
    hooks:
      - id: prisma-format
        name: Prisma Format
        entry: npx prisma format
        language: system
        files: schema\.prisma$
        pass_filenames: false

  # Docker linting (if Dockerfiles exist)
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        files: Dockerfile.*

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--fix]
        files: \.md$
        exclude: |
          (?x)^(
              node_modules/.*|
              \.next/.*
          )$

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: |
          (?x)^(
              package-lock\.json|
              \.secrets\.baseline|
              tests/.*|
              \.env\.example
          )$

  # Git commit message linting (optional)
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Configuration for specific tools
default_language_version:
  node: '22.0.0'

# Exclude patterns
exclude: |
  (?x)^(
      \.next/.*|
      node_modules/.*|
      dist/.*|
      build/.*|
      coverage/.*|
      \.nyc_output/.*|
      \.vscode/.*|
      \.idea/.*|
      \.DS_Store|
      thumbs\.db
  )$

# CI configuration
ci:
  autofix_prs: true
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks
    
    for more information, see https://pre-commit.ci
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false